{% extends 'AdminBundle::base.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link rel="stylesheet" href="{{ asset('assets/node_modules/jsoneditor/dist/jsoneditor.min.css') }}">
{% endblock %}

{% block javascripts %}
  {{ parent() }}

	<script>
	 var Feed = {
		 schema: {},
		 configuration: {},

		 setSchema: function(schema) {
			 this.schema = schema;
		 },

		 setConfiguration: function(configuration) {
			 this.configuration = configuration;
		 }
	 };
	</script>
	<script src="{{ path('resource', { 'path': '@AdminBundle/Resources/public/schema/feed.schema.json', 'jsonp': 'Feed.setSchema' }) }}"></script>
	{% if feed.id %}
		<script>Feed.setConfiguration({{ feed.configuration | json_encode | raw }});</script>
	{% else %}
		<script src="{{ path('resource', { 'path': '@AdminBundle/Resources/public/schema/feed.json', 'jsonp': 'Feed.setConfiguration' }) }}"></script>
	{% endif %}
  <script src="{{ asset('assets/node_modules/jsoneditor/dist/jsoneditor.min.js') }}"></script>
  <script>
   var el = document.getElementById('{{ form.configuration.vars.id }}');
   el.type = 'hidden';

   var container = document.createElement('div');
   el.parentNode.insertBefore(container, el);

   var options = {
     schema: Feed.schema,
     modes: [ 'tree', 'view', 'form', 'code', 'text' ],
     onChange: function() {
       try {
         el.value = JSON.stringify(editor.get());
       } catch (ex) {}
     }
   };

   // create the editor
   var editor = new JSONEditor(container, options, Feed.configuration);
   el.value = JSON.stringify(editor.get());
   editor.expandAll();
  </script>
{% endblock %}
