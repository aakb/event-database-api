# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    # parameter_name: value

services:
    value_converter:
        public: true
        class: AdminBundle\Service\FeedReader\ValueConverter

    file_handler:
        public: true
        class: AdminBundle\Service\FileHandler
        arguments:
            - '@logger'
            -
                base_url: '%admin.base_url%'
                files:
                    path: '%admin.files_path%'
                    url: '%admin.files_url%'

    authenticator:
        class: AdminBundle\Service\AuthenticatorService
        arguments:
            - '@security.token_storage'
            -
                firewall: main

    AdminBundle\Service\ImageGenerator:
        autowire: true

    download_files:
        class: AdminBundle\Service\DownloadFilesService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@file_handler'
            - '@authenticator'

    # Factories
    entity_factory:
        class: AdminBundle\Factory\EntityFactory
        abstract: true
        arguments: ['@service_container', '@doctrine.orm.entity_manager', '@value_converter', '@tag_manager']

    place_factory:
        parent: entity_factory
        class: AdminBundle\Factory\PlaceFactory

    organizer_factory:
        parent: entity_factory
        class: AdminBundle\Factory\OrganizerFactory

    occurrence_factory:
        parent: entity_factory
        class: AdminBundle\Factory\OccurrenceFactory
        calls:
            - [setPlaceFactory, ['@place_factory']]

    event_factory:
        parent: entity_factory
        class: AdminBundle\Factory\EventFactory
        calls:
            - [setOrganizerFactory, ['@organizer_factory']]
            - [setOccurrenceFactory, ['@occurrence_factory']]

    # https://github.com/FriendsOfSymfony/FOSUserBundle/issues/2048
    fos_user.doctrine_registry:
        alias: doctrine

    Symfony\Component\Security\Core\Role\RoleHierarchyInterface:
        alias: security.role_hierarchy

    security.access.edit_voter:
        class: AppBundle\Security\Authorization\Voter\EditVoter
        public: false
        arguments: ['@security.role_hierarchy']
        tags:
            - { name: security.voter }

    # https://api-platform.com/doc/1.0/api-bundle/the-event-system
    event.event_listener:
        class: AppBundle\EventListener\EventListener
        arguments: ['@service_container']
        tags:
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: postLoad }

    feed_reader.base:
        class: AdminBundle\Service\FeedReader\FeedReader
        abstract: true
        arguments: ['@service_container']

    feed_reader.json:
        public: true
        parent: feed_reader.base
        class: AdminBundle\Service\FeedReader\Json

    feed_reader.xml:
        public: true
        parent: feed_reader.base
        class: AdminBundle\Service\FeedReader\Xml

    feed_reader_event_importer:
        class: AdminBundle\Service\FeedReader\EventImporter
        arguments:
            - '@event_factory'
            - '@place_factory'
            - '@organizer_factory'
            - '@file_handler'

    feed_reader:
        class: AdminBundle\Service\FeedReader
        arguments:
            - '@value_converter'
            - '@feed_reader_event_importer'
            -
                readers:
                    json: '@feed_reader.json'
                    xml: '@feed_reader.xml'
            - '@logger'
            - '@authenticator'
            - '@stof_doctrine_extensions.listener.blameable'
            - '@doctrine'
            - '@feed_manager'

    feed_previewer:
        class: AdminBundle\Service\FeedPreviewer
        arguments:
            - '@value_converter'
            -
                readers:
                    json: '@feed_reader.json'
                    xml: '@feed_reader.xml'
            - '@logger'
            - '@authenticator'
            - '@stof_doctrine_extensions.listener.blameable'
            - '@doctrine'

    feed_validator:
        class: AdminBundle\Service\FeedValidator
        parent: feed_previewer

    feed_manager:
        class: AdminBundle\Service\FeedManager
        arguments:
            - '@doctrine.orm.entity_manager'

    twig_extension:
        class: AdminBundle\Twig\Extension\TwigExtension
        tags:
            - { name: 'twig.extension' }

    description_normalizer:
        class: AdminBundle\Service\ContentNormalizer
        arguments:
            - '@exercise_html_purifier.default'

    excerpt_normalizer:
        class: AdminBundle\Service\ContentNormalizer
        arguments:
            - '@exercise_html_purifier.default'
            -
                strip_tags: true
                max_length: 160

    # Override vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/config/jsonld.xml
    api_platform.jsonld.normalizer.item:
        public: false
        class: AppBundle\Serializer\CustomItemNormalizer
        arguments:
            - '@api_platform.metadata.resource.metadata_factory'
            - '@api_platform.metadata.property.name_collection_factory'
            - '@api_platform.metadata.property.metadata_factory'
            - '@api_platform.iri_converter'
            - '@api_platform.resource_class_resolver'
            - '@api_platform.jsonld.context_builder'
            - '@api_platform.property_accessor'
            - '@?api_platform.name_converter'
            - '@tag_manager'
            - '@organizer_factory'
            - '@place_factory'

        tags: [{ name: serializer.normalizer, priority: 10 }]

    tag_normalizer:
        class: AdminBundle\Service\TagNormalizer
        arguments:
            - '@service_container'
            -
                services:
                    tag_manager: tag_manager
                    unknown_tag_manager: unknown_tag_manager

    tag_manager:
        public: true
        class: AdminBundle\Service\TagManager
        calls:
            - [setTagNormalizer, ['@tag_normalizer']]
        arguments:
            - '@doctrine.orm.entity_manager'
            - '%fpn_tag.entity.tag.class%'
            - '%fpn_tag.entity.tagging.class%'
            - '@fpn_tag.slugifier'

    AdminBundle\Service\TagManager:
        alias: tag_manager
        public: true

    unknown_tag_manager:
        class: AdminBundle\Service\TagManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - AppBundle\Entity\UnknownTag
            - '%fpn_tag.entity.tagging.class%'
            - '@fpn_tag.slugifier'

    roles_helper:
        class: AdminBundle\Service\RolesHelper
        arguments: ['%security.role_hierarchy.roles%']

    user.form.type:
        class: AdminBundle\Form\UserType
        arguments: ['%fos_user.model.user.class%', '@roles_helper']
        tags:
            - { name: form.type, alias: user }

    event.authentication_success_listener:
        class: AdminBundle\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    app.aoa.encoder:
        class: AppBundle\Serializer\AoA\Encoder
        tags:
            - { name: serializer.encoder }

    app.aoa.item_normalizer:
        public: false
        class: AppBundle\Serializer\AoA\ItemNormalizer
        arguments:
            - '@api_platform.metadata.property.name_collection_factory'
            - '@api_platform.metadata.property.metadata_factory'
            - '@api_platform.iri_converter'
            - '@api_platform.resource_class_resolver'
            - '@api_platform.property_accessor'
            - '@?api_platform.name_converter'
            - '@tag_manager'

        tags: [{ name: serializer.normalizer, priority: 10 }]

    app.integrity_manager:
        public: false
        class: AdminBundle\Service\IntegrityManager
        arguments:
            - '@doctrine.orm.entity_manager'

    AdminBundle\Service\UserManager:
        public: false
        arguments: ['@security.role_hierarchy']

    app.twig_extension_easy_admin:
        class: AdminBundle\Twig\Extension\EasyAdminExtension
        arguments:
            - '@security.token_storage'
            - '@security.access.edit_voter'
            - '@translator'
            - '@app.integrity_manager'
            - '@AdminBundle\Service\UserManager'
        tags:
            - { name: 'twig.extension' }

    app.encoder.firebase:
        class: AppBundle\Serializer\Firebase\Encoder
        tags:
            - { name: serializer.encoder }

    app.item_normalizer.firebase:
        public: false
        class: AppBundle\Serializer\Firebase\ItemNormalizer
        arguments:
            - '@api_platform.metadata.property.name_collection_factory'
            - '@api_platform.metadata.property.metadata_factory'
            - '@api_platform.iri_converter'
            - '@api_platform.resource_class_resolver'
            - '@api_platform.property_accessor'
            - '@?api_platform.name_converter'
            - '@tag_manager'

        tags: [{ name: serializer.normalizer, priority: 10 }]

    AdminBundle\EventSubscriber\ImagesSubscriber:
        arguments:
            - '@AdminBundle\Service\ImageGenerator'
            -
                base_url: '%admin.base_url%'
                files:
                    path: '%admin.uploads_path%'
                    url: '%admin.uploads_url%'
        tags:
            - { name: doctrine.event_subscriber }

    app.reposity.place:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine.orm.entity_manager', getRepository]
        arguments:
            - AppBundle\Entity\Place

    app.form.type.occurrence:
        class: AdminBundle\Form\OccurrenceType
        tags:
            - { name: form.type, alias: occurrence }

    app.form.type.repeating_occurrences:
        class: AdminBundle\Form\RepeatingOccurrencesType
        arguments: ['@app.reposity.place']
        tags:
            - { name: form.type, alias: repeating_occurrences }

    # Feed import services
    app.danish_zip_code:
        public: true
        class: AdminBundle\Service\DanishZipCode

    Liip\ImagineBundle\Imagine\Cache\CacheManager:
        alias: liip_imagine.cache.manager

    Liip\ImagineBundle\Imagine\Filter\FilterManager:
        alias: liip_imagine.filter.manager

    Liip\ImagineBundle\Imagine\Data\DataManager:
        alias: liip_imagine.data.manager


    AdminBundle\Service\FileHandler:
        alias: file_handler

    AdminBundle\Service\AuthenticatorService:
        alias: authenticator
